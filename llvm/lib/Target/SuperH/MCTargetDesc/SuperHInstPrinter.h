//=== SuperHInstPrinter.h - Convert SuperH MCInst to assembly syntax -*- C++ -----*-==//
//
//                     The LLVM Compiler Infrastructure
//
// This file is distributed under the University of Illinois Open Source
// License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//
//
// This class prints a SuperH MCInst to a .s file.
//
//===----------------------------------------------------------------------===//

#ifndef LLVM_LIB_TARGET_SuperH_INSTPRINTER_SuperHINSTPRINTER_H
#define LLVM_LIB_TARGET_SuperH_INSTPRINTER_SuperHINSTPRINTER_H

#include "llvm/MC/MCInstPrinter.h"

namespace llvm {

class SuperHInstPrinter : public MCInstPrinter {
public:
  SuperHInstPrinter(const MCAsmInfo &MAI, const MCInstrInfo &MII,
                const MCRegisterInfo &MRI)
      : MCInstPrinter(MAI, MII, MRI) {}

  // Autogenerated by tblgen.
  std::pair<const char *, uint64_t> getMnemonic(const MCInst *MI) override;
  void printInstruction(const MCInst *MI, uint64_t Address, raw_ostream &O);
  bool printAliasInstr(const MCInst *MI, uint64_t Address, raw_ostream &O);
  // void printCustomAliasOperand(const MCInst *MI, uint64_t Address,
  //                             unsigned OpIdx, unsigned PrintMethodIdx,
  //                             raw_ostream &O);
  static const char* getRegisterName(unsigned RegNo);

  void printRegName(raw_ostream &OS, unsigned RegNo) const override;

  void printInst(const MCInst *MI, uint64_t Address, StringRef Annot,
                      const MCSubtargetInfo &STI, raw_ostream &OS) override;

private:
  void printOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O);
  void printMemOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O,
                    const char *Modifier = nullptr);
  
};

} // end namespace llvm

#endif
